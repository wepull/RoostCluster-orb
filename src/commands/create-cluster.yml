description: Create a Roost K8s Cluster using AWS instances, requires ROOST_AUTH_TOKEN and ROOST_SERVER environment variables to be set.
parameters:
  auth_token:
    type: env_var_name
    default: "ROOST_AUTH_TOKEN"
    description: Roost Authorization Token, name of the environment variable having the roost auth token, ROOST_AUTH_TOKEN by default.
  email:
    type: string
    description: User Email.
  alias:
    type: string
    description: Alias Name, if not provided then a random one will be generated automatically.
    default: ""
  preemptible:
    type: string
    enum:
      - "true"
      - "false"
    default: "false"
    description: Preemptible Type.
  k8s_version:
    type: string
    default: "1.22.2"
    description: Kubernetes Version.
  cluster_expires_in_hours:
    type: string
    default: "1"
    description: Cluster Expiration Time ( in Hrs ).
  num_workers:
    type: string
    default: "1"
    description: Number Of Worker Nodes.
  namespace:
    type: string
    default: "roost-circleci"
    description: Default Namepace.
  region:
    type: string
    default: "us-west-1"
    description: Aws Region.
  disk_size:
    type: string
    default: "50"
    description: Disk Size.
  instance_type:
    type: string
    default: "t3.large"
    description: Instance Type.
  ami:
    type: string
    default: "ubuntu focal 20.04"
    description: Ami.
  roost_server:
    type: env_var_name
    default: "ROOST_SERVER"
    description: Name of the environment variable containing the Enterprise Server IP. ROOST_SERVER by default.

steps:
  - run:
      environment:
        ORB_ENV_AUTH_TOKEN: <<parameters.auth_token>>
        EMAIL: <<parameters.email>>
        ALIAS: <<parameters.alias>>
        PREEMPTIBLE: <<parameters.preemptible>>
        K8S_VERSION: <<parameters.k8s_version>>
        CLUSTER_EXPIRY: <<parameters.cluster_expires_in_hours>>
        NUM_WORKERS: <<parameters.num_workers>>
        NAMESPACE: <<parameters.namespace>>
        REGION: <<parameters.region>>
        DISK_SIZE: <<parameters.disk_size>>
        INSTANCE_TYPE: <<parameters.instance_type>>
        AMI: <<parameters.ami>>
        ORB_ENV_ENT_SERVER: <<parameters.roost_server>>

      name: Creating a roost cluster with specified parameters
      command: <<include(scripts/createcluster.sh)>>
